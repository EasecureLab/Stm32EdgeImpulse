/* Generated by Edge Impulse
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
// Generated on: 19.07.2021 03:31:16

#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/kernels/micro_ops.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#if defined __GNUC__
#define ALIGN(X) __attribute__((aligned(X)))
#elif defined _MSC_VER
#define ALIGN(X) __declspec(align(X))
#elif defined __TASKING__
#define ALIGN(X) __align(X)
#endif

namespace {

constexpr int kTensorArenaSize = 704;

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

TfLiteContext ctx{};
TfLiteTensor tflTensors[11];
TfLiteRegistration registrations[OP_LAST];
TfLiteNode tflNodes[4];

const TfArray<2, int> tensor_dimension0 = { 2, { 1,600 } };
const TfArray<1, float> quant0_scale = { 1, { 0.09478430449962616, } };
const TfArray<1, int> quant0_zero = { 1, { -84 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const ALIGN(8) int32_t tensor_data1[20] = { 34, -42, -34, -43, -37, 42, -32, -1, 24, -9, 48, -47, -40, -24, 39, 51, 17, -40, 44, -42, };
const TfArray<1, int> tensor_dimension1 = { 1, { 20 } };
const TfArray<1, float> quant1_scale = { 1, { 7.6146119681652635e-05, } };
const TfArray<1, int> quant1_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant1 = { (TfLiteFloatArray*)&quant1_scale, (TfLiteIntArray*)&quant1_zero, 0 };
const ALIGN(8) int32_t tensor_data2[10] = { -7, 7, -9, 8, 11, 0, -10, -10, -7, -9, };
const TfArray<1, int> tensor_dimension2 = { 1, { 10 } };
const TfArray<1, float> quant2_scale = { 1, { 0.00038191283238120377, } };
const TfArray<1, int> quant2_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant2 = { (TfLiteFloatArray*)&quant2_scale, (TfLiteIntArray*)&quant2_zero, 0 };
const ALIGN(8) int32_t tensor_data3[3] = { 4, -7, 9, };
const TfArray<1, int> tensor_dimension3 = { 1, { 3 } };
const TfArray<1, float> quant3_scale = { 1, { 0.00043762361747212708, } };
const TfArray<1, int> quant3_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant3 = { (TfLiteFloatArray*)&quant3_scale, (TfLiteIntArray*)&quant3_zero, 0 };
const ALIGN(8) int8_t tensor_data4[20*600] = { 
  -87, -83, -69, 17, -19, 14, -100, -88, -93, 21, 110, -57, -80, 106, 53, 121, 111, -35, 85, -78, 108, -107, 112, -85, -67, -70, -107, 52, -48, -39, -74, -107, 27, 109, 37, -47, -60, 82, 37, -9, 83, 122, 82, 64, -95, 39, -26, 61, -52, 20, 63, 98, -102, 98, 20, 25, 18, -20, -17, 7, 17, -33, -58, -29, -57, -29, 61, 54, 1, -88, 102, -68, -9, 9, -18, 115, 70, 93, -7, 69, 83, 57, 14, 82, -6, 32, -42, 42, -21, 88, 100, -94, 21, 64, 0, -36, 27, 44, 8, 119, -119, -59, 83, -60, -17, -94, 41, -90, 21, 34, 24, -14, -60, -10, -31, 4, 70, 20, -51, -20, 96, 58, 68, 113, 107, -108, 100, -65, 91, -84, 105, -111, -29, -61, 84, -35, -43, 124, 19, 73, 87, -39, -115, 63, 42, 116, 9, -81, 16, 63, 80, 55, -8, 56, 104, 92, 13, 25, -15, 104, -28, -50, -103, 88, -75, -111, 58, -96, -81, 120, -4, -21, -69, 83, 111, -75, 18, 51, 44, 117, 70, -74, 117, -90, -18, -96, -88, 90, -64, 43, 107, 123, -84, 112, -7, 71, -45, 59, 34, -54, -22, -98, 94, 79, 107, -27, 116, -99, -55, -71, 42, -29, 16, -52, 10, -21, -48, 30, -112, -94, 5, -108, 34, 85, 61, -74, -6, -27, 118, 108, -46, -21, 56, 71, 27, 15, 77, 32, 93, 94, -49, 46, -2, 26, 18, 115, 62, -23, 23, 105, -100, -94, -40, 1, -118, 9, -6, -10, 31, -7, 58, 64, 6, -2, 0, 109, -18, -36, -87, 62, 88, 101, -103, -99, 69, -91, 62, -60, 60, -53, -82, 125, 10, 90, -85, 118, 71, -97, 61, 58, 55, -63, -111, 121, 43, 82, 35, 17, 33, 40, -114, -44, 5, -59, -85, -16, -48, 29, -13, 29, 13, -106, 115, -31, 42, 2, -96, -41, -33, 113, 109, 74, 79, -80, 93, 45, 42, 47, -45, 16, 81, -84, -50, 73, -21, 100, 96, -73, -71, 91, 71, -89, -84, -97, -94, -21, -36, -59, 14, -67, 41, 18, -59, -116, -38, -9, 56, -15, -20, -39, 32, 13, 33, 67, -89, 6, -92, 38, -87, 108, -119, -52, -108, -2, 114, 118, -112, -49, 103, -90, -81, 121, -24, -52, 48, -78, -5, 81, -20, -17, -6, -63, 76, 97, 23, -83, -69, -127, 20, 33, -71, 9, -44, -114, 82, 110, 42, -56, -30, 95, -99, -111, 68, -119, 86, -57, -28, -84, 62, 62, -38, -79, -90, -53, -56, 124, -116, -100, 38, -22, -86, -70, -77, -77, -69, -38, 97, 51, 115, -23, 0, -74, 60, -19, 27, 74, 77, 33, -114, 11, -117, 37, -58, -44, 59, 2, -46, -104, 61, 33, 96, -78, -29, 61, -13, -118, 25, 44, 44, 115, -55, 36, -51, 54, -114, -12, -13, -10, -23, -37, 42, 50, -16, -62, -98, -19, 68, -63, 33, 57, 14, 65, 110, 6, -69, 0, 30, -39, -25, -41, 122, -14, -5, 8, -89, 121, 3, 71, 81, -42, -30, 7, 90, 9, 64, 1, 113, -83, -79, -78, 103, 4, 58, 5, 20, -118, -48, 27, -62, 31, 104, 64, -117, -118, -82, -110, -6, -12, -23, 85, 82, -4, 44, -113, 32, 46, 94, -106, -73, 99, -117, 111, 102, -123, -100, 123, 42, -7, -109, 45, 99, 14, -115, 115, 113, -82, -72, -19, 5, 67, 75, -48, -75, -13, -105, 45, 52, -57, -100, 30, 78, 43, 124, -114, 6, -48, 95, -39, 61, -110, 41, -4, 103, 48, -79, -29, 51, 59, 1, -80, 
  13, 27, -2, -50, 25, 110, 73, 99, -102, 76, 64, -61, -29, -103, -72, -52, -49, -105, 80, 51, -12, -70, -100, -72, 35, -72, 26, 54, -67, 3, 93, 108, -120, -25, -113, 102, -43, 63, 80, -63, -65, 18, 21, 1, -104, -116, 28, -9, -26, -70, 71, 116, -113, -62, 106, -23, -111, 115, -28, -94, 99, 6, -71, 70, -41, -65, 39, -80, 68, -33, -120, 58, -36, -65, 60, 10, -90, -111, 65, -107, 89, -74, -100, -124, -58, -14, -101, 91, -40, -116, 97, -4, -107, -88, -119, 98, 1, 104, -124, -120, -13, 93, -75, 85, -74, 99, -90, 19, -42, -52, -61, 7, 58, -33, 84, -93, -108, -122, -95, 6, 52, -4, 14, -76, 47, -112, -122, 93, 65, -63, 12, -88, -93, -8, -37, 75, 57, 84, -42, 34, 40, 36, -6, 29, -92, -15, -123, 22, 30, 45, 38, -60, -74, 91, -34, -10, -99, -7, 40, -76, -7, -114, 43, 35, -62, -1, 88, -94, 43, 112, 107, -113, 75, -49, -76, 10, -65, 41, -84, -60, -18, 82, -87, 62, -36, 64, 12, -111, 72, -126, 82, 80, -94, 97, -118, -40, -83, 1, 96, 96, -34, -63, -120, -34, 28, -48, -67, 29, -67, 90, -69, 107, 30, 21, -75, -85, 78, -96, 19, -56, 74, -58, 101, -44, -43, 100, 36, -23, -7, 79, 114, -22, -86, -32, 98, -63, 8, -36, -115, 69, 52, -87, 62, 112, 82, 50, -49, -114, -60, 90, -79, 43, -22, 94, 62, -121, -83, 14, 17, 53, 76, 56, 115, -47, 45, 46, 6, 110, 109, 111, 72, -50, -81, -84, -9, 33, 103, -5, -34, -15, 70, -115, 111, 7, 4, -123, -2, 108, 15, -111, 69, 8, 26, 13, -78, 57, -114, -79, 3, 82, 118, 103, -57, 70, 35, 64, 30, 72, 21, -103, -46, -98, 22, -81, 118, 36, -76, -45, 10, -112, 55, -32, 99, 111, -104, -6, -73, 11, -34, 116, 110, -36, -68, -31, 55, 46, -113, -115, -119, 108, 81, 56, -26, 52, 71, -60, -8, 64, 24, -58, 111, -21, 121, -78, -80, 117, -119, -26, 58, -48, 44, 68, 6, 92, -116, -109, -77, -14, 33, -31, 25, -119, 123, 36, -29, -54, -3, -27, 57, -52, -105, 117, -79, 98, -95, 40, -103, -91, -13, 55, -35, -13, -58, 41, 82, 39, 49, -33, 8, -50, -6, -83, 16, 39, 80, -87, 118, 61, 21, 69, 25, -94, -22, -55, -72, -50, 37, -69, -23, 48, -12, 80, 110, -112, 50, -26, -45, 118, 26, -47, 17, -111, -67, -108, -17, -2, -73, 84, -74, -33, 83, -11, 73, 28, -79, -77, -118, -101, -72, -25, -50, -2, -119, 105, 25, -55, 95, -22, 20, -76, 56, -98, 107, 59, -115, -58, -58, 80, 121, 115, -93, 95, -47, -72, -32, -27, -70, -33, 90, 11, 23, -96, -68, 89, -112, -28, -78, 114, 79, 39, -90, -7, 58, 4, 51, -125, -11, 3, 56, 94, 99, 88, -59, -41, 104, 15, 2, 45, 28, -87, -42, 111, 107, -79, 104, 44, -69, -104, -12, 67, 90, 77, -75, -60, -109, 24, 1, 67, 88, 112, 100, -121, 3, -47, 8, -111, 11, 13, -52, -53, 96, 8, 13, -92, -62, 117, -119, 8, -87, -71, 90, -26, 75, -22, 116, 78, -5, 48, -7, 92, -26, -82, 44, 31, 41, 90, 109, -122, 22, 30, -104, 112, 88, 17, 63, 100, -15, 104, 18, 45, 61, 114, -83, 50, 49, 7, 42, 58, -72, -98, -30, 102, 49, 61, -84, -59, -77, -13, 102, 71, 
  -5, -122, -98, 47, -3, 24, -120, -32, -79, 8, -44, -32, -93, -30, 61, -105, -86, -31, 97, -120, 79, -21, -64, 21, -58, 98, 10, -66, -23, -76, -83, 87, -109, 44, -85, 36, 24, -20, -62, -80, 95, -25, -8, -13, -32, 9, 81, -34, 117, -98, 109, -7, 19, -87, 73, 59, 71, 28, 34, 87, 39, -119, -109, 38, 52, -92, -62, 7, 60, 105, 85, 50, -49, 113, -44, 66, -87, -33, -94, -32, 26, -61, -90, 36, 94, 115, -14, 59, -88, 50, -43, 27, -119, -43, 116, 38, 77, -16, 55, -26, -92, 24, 71, -29, 66, 91, -80, 101, -21, -87, -9, 40, 22, -49, 105, 15, 81, -83, -88, -101, 117, 94, 67, 99, -103, -54, -37, -100, -94, -21, 56, -16, 1, 46, 59, -17, -49, -47, 12, 71, -16, -45, 10, -25, 99, -107, -116, -40, -64, 22, 79, -119, -81, -34, -87, -23, 23, -123, -119, 29, 2, 21, 91, -70, 52, 80, -107, -86, 23, 44, -45, -24, 88, 68, -104, 16, -121, -46, -7, -9, 7, 5, 119, -31, -120, 2, -73, 83, 77, -63, -8, -95, 32, -92, 70, -55, -59, 93, -117, -27, 100, -93, 116, 46, 55, -59, 112, -25, 57, 79, -30, -96, 36, 101, 91, -114, 9, 6, 5, 72, -33, -95, 96, 15, -23, -26, -115, 94, -12, 87, -117, -96, -4, 32, 6, -93, -8, 27, 52, 4, -9, 113, 57, -63, -85, -11, -7, -110, 82, -19, 30, 50, -126, -105, -35, -68, 68, -17, 26, -12, -10, 4, 14, -1, -37, -39, 63, 81, -112, 67, 99, -124, -89, -32, 69, -94, 90, 4, 107, -7, 15, 121, 42, 117, -75, 21, -46, -95, 20, -113, 79, 118, 73, 4, 103, 94, 78, 43, 79, 109, -54, -78, 21, 16, -6, -92, -81, 88, 44, -109, 73, -115, 60, 87, -44, -76, -65, 35, 92, 49, -112, 25, -1, 75, 5, -28, -41, -103, 97, -46, -7, 36, -45, -33, -122, -2, -56, 85, 74, -74, -53, 41, -1, 113, -31, 1, 83, -123, -92, -82, -94, 25, -11, 105, -100, 27, 106, -70, 8, 25, 60, -49, -54, 3, -124, -3, 105, 46, 6, -12, 66, 61, -123, -115, 44, 96, 69, 71, -89, -24, -54, 81, -45, -63, 115, -69, -50, 37, 81, -121, -17, 41, 104, 36, 58, 56, -81, 36, 115, 110, 57, 38, -82, 116, -16, -117, -45, -54, 13, -98, 105, 14, 30, -51, 0, 9, 12, -104, 100, -63, -47, 30, 14, -67, 12, 38, -84, 74, 22, -42, 23, 111, 45, 19, -18, -24, -34, -19, -64, 74, 72, 58, 68, 27, -68, 116, 52, 19, 108, -68, 57, -92, 27, 88, -91, -47, -39, 62, 78, -110, 89, -106, 48, -121, 4, -49, -14, 97, -75, -74, 51, -26, -87, 46, -18, -23, 87, -20, 64, 113, -5, 76, -117, 13, -90, -99, 59, -33, -53, -114, 1, -102, 47, 42, -44, -73, -30, -82, -31, 17, 74, -111, -74, 27, -19, -91, 60, -124, 99, -17, 36, 116, -55, -6, 3, 67, 3, -79, 26, 71, -101, 91, -73, 11, -23, 80, -68, -65, 51, -41, 109, -9, 89, -55, 73, -19, 106, 117, -68, 69, -57, 117, 98, -11, -25, -74, -67, -56, -76, 53, 0, 48, 103, -118, -50, -93, -31, -67, 11, -54, -75, 21, -38, -112, -40, 22, -120, -109, -21, 103, -62, -69, -110, 23, 83, 39, -52, -85, -33, -16, 44, -86, -126, 116, 107, -110, -82, 0, -71, 92, -69, -55, 64, 20, 5, 82, -82, 1, 46, -13, 
  -122, -37, -100, 46, 28, 31, -88, 15, 14, 100, -3, -109, 15, 50, 6, -64, -37, -30, 110, 67, -125, -80, 117, -14, -21, 107, 4, -44, 88, 18, -4, 85, 4, -103, -31, 87, 25, -28, -94, 2, 3, -26, -32, 62, -95, -80, 86, -94, 64, 70, 98, -74, -51, 105, -115, -74, 60, -2, 74, -87, -117, -69, -30, 73, -71, 31, -41, -123, -120, 40, 53, -47, -5, -77, 11, -91, -107, 44, -63, 65, 66, -72, -71, 11, 59, 62, 89, -66, 98, -41, -9, -84, -51, 72, 67, -105, -96, -54, 64, -14, -29, -78, -97, 47, 17, 29, -12, -84, 44, -101, 47, -78, -45, -16, 23, 76, -15, 21, 18, 2, 44, -120, 117, -70, -31, -89, -81, 99, -118, -66, -68, -55, 90, 35, -92, -47, 92, 14, -105, 72, 29, 102, 10, -48, -65, 90, 62, -19, 105, 17, 70, 44, 27, -43, 109, -32, -14, -95, -64, -116, -8, 71, -99, 61, 100, -29, 20, 3, 96, 54, -94, 99, -107, 118, 102, 55, -76, 53, 98, -23, 102, -12, -68, 89, -78, 70, 100, -44, -4, -56, -4, -101, 51, 38, -46, -126, 62, 51, -48, -70, -80, -71, 106, -26, 14, 40, 69, 118, -45, 47, -103, -10, 82, -104, -114, -120, -105, -29, 67, -59, -13, -78, -116, 11, -121, 0, -35, -42, 55, 72, 107, 42, -57, -43, 58, 14, 96, -121, -91, -64, -94, -39, -14, 17, 73, -84, 10, 44, -115, 105, -58, -13, -97, -5, 80, -24, -24, 66, -75, -100, 111, 103, 13, 4, -94, 96, -125, -96, -110, -80, 113, -6, -44, 95, 10, 13, 26, 92, 29, -26, -2, 63, 83, 32, 118, -104, 5, -77, -99, 67, -63, 65, 38, 109, 70, 117, 36, -111, -95, 100, 60, -54, -108, 27, -9, -25, -27, 118, 21, 32, 53, -107, 17, 95, 100, -34, -20, -16, -12, -94, -125, -89, -48, 29, -70, -63, 26, -57, -86, 25, -45, 88, -84, 15, -94, -6, -16, -57, -32, -91, -83, 93, -54, 27, 47, -64, 39, -47, 79, 113, -89, -37, -77, 94, 102, 93, 20, 14, -100, -42, 0, 84, -5, 39, -60, 18, 31, 65, -47, -122, 5, 77, 33, 16, 13, -113, 24, 58, -83, 92, -14, -70, -40, -103, 76, -34, -64, 57, 28, -39, -98, 109, -72, -120, 29, 109, 68, 24, -83, -125, -79, 39, 44, -30, -3, 58, -42, 96, 3, 42, -26, 29, 48, 72, 5, 79, -13, 118, -114, -75, -115, 70, 60, -75, -61, -72, -41, -82, 25, 4, -40, -48, 101, -82, -57, 51, -96, 25, -3, 76, 98, -7, 111, -72, -125, -5, -28, 106, 83, 78, -12, -104, 111, 40, -125, 94, -123, 118, -70, -30, -3, 69, 98, -23, -20, -48, 118, -42, -92, 23, 68, -46, 100, 78, 6, 56, -114, -43, -56, 65, -63, 103, -114, -71, 103, -119, 56, -61, 40, 88, -61, 114, -1, -105, -43, -43, 1, -3, 78, 76, 2, 91, 48, 42, -102, 52, -55, -51, 21, 78, -87, -39, -102, -18, -116, 19, 58, -98, -63, -60, -52, 34, 53, -35, -88, 92, 110, -103, -2, 13, -16, 114, -63, -81, -91, -95, 61, -104, 83, -53, -108, -69, -77, 109, 115, 99, 41, -103, -26, -5, 117, 25, 18, 30, 95, -69, 57, -4, 63, -80, -2, 5, 115, 36, -71, 57, -102, 38, 54, 94, -72, -108, 25, -78, 36, -22, 16, -98, -27, -54, -25, -77, -28, 56, -77, 0, 69, -85, -15, -120, 68, 114, -28, 39, -36, -21, -30, -32, 4, -107, 
  -2, 65, -76, 72, 35, 104, -96, -51, 19, 34, 37, 1, -11, -29, -107, -9, -63, -57, 24, 19, 16, -53, -50, 24, -17, -58, 101, 46, 107, -5, 4, -68, -64, 64, -65, -49, 65, 59, -92, -66, 48, -103, -83, -36, -116, -10, 97, 88, 61, 36, 48, -113, 20, -70, 74, -29, 68, -97, 48, 30, -90, 22, -43, -73, 113, -12, 17, -82, -28, -120, -51, -12, -19, 22, 22, 42, 35, 27, -14, 109, -32, 56, 66, -77, 72, -7, -23, -59, -92, 100, -85, 46, 40, -50, 109, -3, -77, 45, 115, 10, -68, -23, -76, 114, -46, 21, -96, -42, -36, 64, 47, 79, -64, 106, -58, 20, 65, 110, -106, 90, -73, -14, -103, -23, 98, 100, 113, -110, -12, 37, -69, 29, 7, 45, 61, -89, -87, -125, 113, 28, 24, 101, 17, 109, -39, 26, -45, 84, 101, -76, -69, 16, 13, -30, 72, -69, -28, -125, -31, -16, -33, 89, -38, -103, -47, 26, 83, 65, 40, -98, 113, 111, 31, 46, 40, 117, 94, -111, 12, -110, 4, 68, 114, -35, -103, -109, 18, 110, 78, 46, -54, -4, -44, -17, -59, 67, 6, 65, -52, 73, -40, 73, 53, -13, -117, -90, 108, 15, 71, -15, 34, 97, -117, -14, 2, -66, 60, 18, -27, 92, 22, 50, 72, -111, -79, -65, -14, -62, 25, -76, -28, -117, 110, -61, 15, 34, -116, 106, 2, -1, 4, -27, -122, 87, -82, -9, -95, 2, -45, -20, 64, 27, 47, 2, 83, 12, -53, -67, 10, -100, -47, 94, 71, -99, 20, -59, -111, 37, 38, -114, -56, -14, -88, 86, -78, 62, -92, 16, 108, -99, -122, -10, 100, 83, -80, -88, 64, -39, -79, -45, -57, -69, 85, -84, -87, 75, -2, -22, -33, -20, -67, 85, 1, -24, 0, -49, -111, -26, -29, -9, -101, 7, -47, -52, -13, 98, -13, -26, 31, -5, -44, 77, 112, -97, 66, 75, 14, -13, -112, 50, -26, -106, 38, -120, 65, 53, 77, -19, 49, 36, 71, 42, -86, 56, -76, 39, -40, -122, 74, 52, 67, -124, 47, -109, -18, -34, 115, -22, 113, -40, 101, 27, -124, 61, 95, 49, -19, 0, 84, 36, 89, 67, 94, -81, 21, -87, 118, -19, -23, -53, -50, 101, -6, 25, -39, -37, 35, -116, -123, -29, 34, -114, -110, -74, 58, -115, -36, 6, -37, -99, -14, 42, 69, -42, -4, 51, 74, -38, -112, 22, 107, -9, 108, 64, 1, -68, 13, -23, -100, -70, 59, -109, 91, 0, 34, 45, 1, -36, -17, 108, 75, -37, 106, 87, 115, 59, 35, -112, -5, -94, -38, -9, 108, 52, 22, 43, -75, 49, 72, 64, -46, 1, 71, -56, 23, -94, -88, -22, 2, -44, -92, -102, -27, 75, 58, 11, 45, 42, -92, 80, -69, -16, -101, 61, 58, -29, 83, -4, -46, -55, 3, -104, -73, -39, 87, 58, -101, -28, -18, -9, -54, -62, -78, -51, 97, -15, -126, -67, -31, 110, -96, 0, -11, -108, 118, 70, 105, 39, 27, -44, 74, 1, -13, -115, 72, -98, -23, 106, -118, -30, 118, 106, 117, -9, -80, 50, 60, -77, 111, -119, 58, -48, 17, -71, -13, 63, -110, 88, -51, -2, 40, 86, -7, 109, -15, 62, -36, 62, -50, -32, -40, -54, -8, 26, -29, -19, -79, -26, -98, -31, 106, 4, 56, -41, 46, 39, -84, 29, 66, 9, -61, 111, 104, 0, -124, 12, 21, -73, -76, 118, -101, 55, 7, -24, 113, -118, -12, 31, 38, -98, -31, -44, -25, 13, -52, 25, 51, 82, 42, 55, 
  65, -64, -19, -16, 1, 49, 33, 45, 2, -97, -55, -71, 115, -53, 93, 26, -58, 47, 86, 106, -55, -109, -19, -35, -78, 60, 25, -44, 70, 44, 59, 119, 10, 113, -31, 80, -8, 37, 122, -61, 0, 35, 108, 70, -31, 80, -108, 77, -15, -7, -16, 9, -35, -49, -15, 79, 36, -43, 81, 16, -21, 4, 103, 10, 30, 2, 79, 53, 25, -85, -113, -47, -57, -108, -56, -107, 34, 124, 47, 57, -104, 32, 37, 7, 123, 118, -35, 37, -83, -30, 40, 37, -104, 28, -83, 9, 56, 115, -82, 52, 2, -5, 24, 75, 87, -64, -2, -82, -40, 10, 12, 97, 80, -15, 52, -66, 16, -48, 75, -105, -77, -22, 30, 87, 25, 65, 65, -63, -54, 113, -40, 65, -57, -63, 99, -106, -37, 36, -8, 33, -15, 0, -75, -70, 89, 113, -29, -73, -27, -55, -8, 90, -79, 91, -91, -92, 22, -91, -40, -97, 27, 56, 18, -112, -7, 109, 16, 47, -109, -93, 31, 99, 118, 76, 106, 106, 101, -26, -117, 116, 9, 75, -33, 94, 54, 99, -39, -14, 43, -8, -43, -91, -70, 101, 120, -6, 94, 116, 116, -117, -94, -108, 43, -70, 121, 4, -63, -81, -58, 38, -70, -31, -67, -89, 102, -96, -15, -67, 91, 121, 78, 62, 118, 89, -77, 79, -40, -8, -37, 91, 10, -29, 6, -9, -55, 19, 45, -96, 55, -73, 119, 93, 66, -70, 89, -14, -12, -40, 109, -21, -102, 113, 38, 74, -19, 81, 77, 11, -102, -45, -73, 116, -2, -92, -39, -69, -63, 104, 46, -70, -34, 7, -84, 38, 23, -96, -65, 26, -112, 51, 77, -76, -62, -63, -4, 33, -28, 8, 73, -9, -111, -9, -110, -50, 125, -89, 10, -56, 107, 126, -117, 97, -118, 68, 65, 6, 75, 95, -20, -83, 106, -86, -28, -85, -64, -106, 92, -12, -109, -89, 98, -94, -87, -3, 64, -21, 60, 67, -22, -81, -73, -24, 6, 50, 41, -83, 4, 40, -82, 30, 115, 27, 35, -12, 11, -21, 63, 5, -62, -72, 114, -46, 89, 66, 47, 39, -1, -64, 110, 14, -48, -54, -23, -72, 22, 90, 2, -93, 57, 21, 14, 117, -78, 123, -115, 76, -6, -69, -54, -103, 47, 118, -5, 120, -39, -113, 15, 117, 53, -12, -104, 68, -107, 23, 92, -96, -114, 6, -94, 68, -20, 26, 104, 108, 47, 2, -8, -94, -106, -113, 36, -32, -59, 33, -74, -64, 65, 75, 106, 2, 43, 59, 59, 86, -33, -9, 40, 70, -46, 42, 105, -84, 45, 52, -78, -69, 95, -17, 39, -44, -29, 6, 50, 16, -116, -65, 18, -48, 16, -93, 120, -18, 110, -19, -72, 18, 111, -95, 41, -118, -94, -76, 123, 32, -73, -12, -75, -86, 1, 101, 99, -26, -13, 17, 92, 116, -32, 99, 20, 105, -27, 8, 12, -36, -39, -88, 70, 25, 106, 48, 81, -48, 85, 54, -25, -25, 103, -97, 3, 41, -91, 16, -99, 47, -19, -49, 49, 44, 15, 125, 99, 98, -71, -103, -6, 65, -91, 124, -6, 71, -27, -33, -106, -21, -43, 72, 24, -91, 100, 15, 96, -66, -114, 27, -6, 74, -117, 110, 15, 61, 105, 73, 115, 118, 50, -90, 28, 30, 40, 104, -47, 72, -46, 51, -88, 125, 56, 23, 86, 40, -99, 53, 25, -97, 62, 64, -103, 50, -115, -43, -50, 28, 0, 90, 84, -64, -25, -98, 98, -108, 100, 7, 80, 9, -77, -27, -38, -2, 12, 33, -51, -88, -39, 45, -11, 24, -94, 39, 76, -67, 
  -94, 108, -19, -47, -48, 33, 33, -29, -60, 62, -102, -95, -123, -87, 102, 26, -26, 54, 30, -44, 20, -18, 110, -95, 28, 1, -63, 17, 29, -36, 51, -37, -79, -13, -45, -55, 25, 82, 8, -49, 94, 1, -107, -66, -21, -6, 87, 100, 62, 53, 40, 12, 81, -47, -116, 57, -72, 51, 7, 15, 44, -35, 14, -42, -51, -107, 36, -34, -59, -19, -110, 60, -24, 52, -50, -70, 28, 31, 92, 25, 53, 13, -42, -1, 56, -65, -55, 89, 107, 6, -49, -18, 0, 90, -109, 17, 73, -85, 109, 97, 39, -16, 68, 33, -16, -97, 54, -112, -96, -22, 107, 50, 64, 60, -74, 70, -104, -120, 25, -33, 75, -26, 5, -10, -83, 20, 108, -42, -35, -51, -53, -81, -31, -24, 71, 83, -76, -113, 28, 11, 67, -74, -98, -108, 98, 76, -29, 32, 113, 28, -25, -4, -4, -33, 33, 38, -36, 47, -109, 114, -116, 82, -43, -3, 116, -63, -119, -83, -100, 56, -82, -3, -84, -9, 112, 48, -115, 1, -82, 107, 96, -97, 113, -18, -94, 94, -20, -94, -54, -11, -71, 72, -99, -89, 67, 98, -22, 76, 71, -25, -36, 99, 74, -40, -86, 102, -82, -41, -75, 117, -91, 77, -80, 76, 19, 55, -102, 69, -22, -75, -108, 89, 19, -71, 119, -85, -113, -28, 66, -95, -66, 40, -53, 59, -61, -5, -46, 9, -74, 39, -114, 54, -66, -33, -1, 69, 22, -101, 13, -63, -24, -52, 52, -100, 79, 26, 58, 53, -86, -113, 60, 54, -72, -15, 39, 108, -22, 12, 84, 24, -57, 90, 95, -19, -62, -74, 44, -19, 112, 37, 86, 69, -89, 2, -55, 22, 100, 20, 30, 93, 46, -94, 104, 120, -11, -7, 46, 24, -15, 62, -59, 115, -18, 15, 27, 94, -25, 3, 87, 78, -40, 43, -53, 36, 23, 36, 77, 33, 21, -75, -98, -5, -39, -37, -114, 110, -119, 82, 7, -3, -58, 94, -57, -61, -124, 73, -72, 52, 117, 113, -12, -81, 84, -7, -22, -30, -73, -87, 70, 84, -25, -63, -118, -40, -69, -70, -26, -69, 109, 69, -18, 59, 98, -7, -59, 17, -107, -53, 41, 118, -79, 12, 80, -37, -79, 44, 26, -31, 16, -31, -106, -94, -106, 45, -32, 110, 2, 15, -5, 33, 120, -109, 110, 71, 93, -104, 110, -123, -33, -96, -9, -34, -20, 87, -100, 38, -47, -104, -71, -35, -61, 17, -11, -88, 95, -84, 12, 55, -14, 59, 96, -60, 17, -77, -106, -121, -17, 87, -50, -1, -71, 14, -46, 5, -89, 109, -91, 62, 90, -90, 5, 2, 65, -97, -109, 61, 96, -107, -64, -93, 59, -16, 89, 72, 49, -15, 9, -76, -91, -17, 116, 96, -19, 112, 18, -121, -23, 93, 113, 109, -103, -83, 14, 77, -66, 118, -88, -50, 88, -49, 75, 102, 79, -11, -10, 84, -13, -68, 8, -18, 87, -62, 46, -48, -4, 4, -75, -43, 78, -112, 28, -25, -4, -79, -43, 71, -9, 64, -44, -111, -107, 2, -52, 110, -114, -48, -79, -8, -85, 84, 79, -78, 86, 68, 72, -64, 115, -105, -112, -44, 8, 27, -94, 33, 27, -44, -100, 55, -13, 31, 116, -26, -102, 78, 109, -57, 85, -111, -5, 65, 37, 45, -61, -87, 43, -44, 86, 62, 34, 103, -96, -4, 14, 109, -35, 116, -59, 10, -27, -53, -63, -7, 10, -126, -34, -75, -16, 81, -29, -16, 44, 71, 29, 97, -7, 52, 59, -24, 81, -37, 110, 50, -4, 71, 95, -90, 92, -38, -3, -107, 
  -39, 120, -83, -27, -98, 110, 19, -110, 95, -93, 78, -66, -86, -51, -68, -11, 0, -96, 8, -32, -38, -95, -114, -25, -18, -103, 83, 38, 46, 83, -106, 103, -108, -61, 15, 37, -118, 29, 51, 43, 16, -110, 78, -78, -81, 93, 55, 93, 27, 5, 108, 40, -53, 108, 49, 15, -2, 108, -37, -72, -17, 63, 33, 92, -106, 36, 51, -81, 74, -70, -112, 99, -39, 118, 40, 59, 20, 5, 98, 96, 83, 105, -11, -12, -70, 41, 80, -97, -91, 108, -110, -99, -120, -110, -86, -77, -121, -89, -81, 67, -109, -4, -109, 38, -8, 30, -11, 80, 68, -20, 101, 16, 83, -53, -13, 67, 1, 98, -59, 32, 25, 111, -116, -67, -91, 104, -52, -47, -50, 86, -11, -112, -104, 4, 114, -72, 82, -29, 96, 47, -84, -1, -74, -43, 35, 38, -49, -105, 49, 78, -118, -37, 12, 54, -45, 2, 24, -23, -88, 31, 47, 84, -2, -56, -105, -118, 52, 72, -26, -69, 39, -59, 61, -78, 76, -34, 106, 13, -73, 4, -73, 4, 41, 14, 20, -73, -36, -7, 62, -118, -13, 1, 43, 44, 108, 115, 48, -57, 97, -68, -23, 112, 103, -44, -80, -110, 90, 14, -13, 35, 31, -111, -107, 47, -106, -15, 122, -11, 114, 18, 124, 70, 100, -34, 77, 55, -112, -126, 86, -33, -7, 15, 105, 57, -110, 37, -119, -32, -78, -98, -121, 98, 67, -16, 56, -103, 55, -43, 92, -19, 72, -11, 25, -79, -116, 4, 21, 67, 35, 81, 48, 109, 68, -108, 96, -69, 0, -94, -106, -28, -93, -48, 113, 116, 38, 97, 47, 31, 21, 89, 104, 20, 31, 97, 38, 89, -117, 31, -48, 74, 47, -81, 9, 40, -24, 32, 55, -77, 72, 27, 97, 101, 57, 22, -74, -37, -85, 76, 101, 84, -42, 83, -5, -48, -59, 47, -112, 34, -6, 122, -32, -5, -60, -41, 77, 41, -25, 86, -61, -47, 80, 109, -116, -26, -116, 25, 8, -49, -31, 123, -78, -115, -12, 57, 19, -106, 97, -109, -10, -23, -75, 112, 22, 27, -48, -78, -72, -8, 17, 67, -106, -110, -11, 25, -11, -44, -47, -21, -25, 87, 2, -32, 80, -75, 93, 19, 9, -68, 90, 29, -48, 44, -7, -90, -84, -85, -90, -30, -22, 55, 50, -45, 118, -52, 121, 52, 54, 114, -75, 107, 99, -63, 2, 44, 84, 84, 60, 54, -99, -8, -18, -116, -7, 97, 0, 51, 116, -63, -30, -73, 43, 74, 94, -105, 30, 112, 13, 118, 107, 77, 58, -90, -43, -115, 56, 87, 15, 108, 29, -68, -115, 116, 52, 10, -29, 34, -49, 83, -30, 57, -14, -49, -64, -118, 7, 58, 16, 93, -117, -15, 4, -100, -91, -93, -109, -104, 122, -97, -89, 65, -84, -64, 93, -82, 119, 1, -7, 94, -115, 117, -68, 36, -84, 18, 37, 58, 54, 105, -120, -87, 119, -48, 2, -119, 44, -94, 99, 43, 49, 120, 42, 9, -76, 1, -69, -21, 85, -100, -114, 61, -90, -73, -15, 85, 38, -88, 64, 23, -112, -43, -102, -124, 11, 72, 86, 20, 74, 111, -2, -67, -20, -22, 124, -23, -68, -63, -97, 12, 88, 69, -115, 93, -31, 76, -34, -107, -38, 16, 20, -24, 28, -55, -38, 121, 74, 54, 50, -87, -118, -9, 6, 16, -40, 2, 65, -101, -41, 47, -12, 13, 3, 62, 97, -35, 31, -33, -2, 80, -102, -51, 51, 66, -49, 43, -8, 35, 11, -77, -103, -40, 28, -15, -102, 0, -102, -6, -114, -109, 79, -18, 
  40, 50, 47, -113, 77, 58, -36, -23, 53, -92, -118, 117, 12, -46, -120, -71, 23, -19, 91, 0, -13, -31, -21, -62, -48, 109, -102, 31, 97, 0, -39, 46, -50, 52, 85, 40, -16, 15, -101, 33, 62, -97, -81, 82, -32, 10, 96, 61, -81, 104, -119, -87, 27, -82, -32, 1, -100, 46, 72, 37, -17, 90, -62, 123, 105, 109, -117, 19, 7, -118, 48, -78, 57, 120, -82, 114, 53, 68, 105, -17, -53, -27, 85, -39, 65, -10, 56, 48, 49, -21, 98, -19, -112, -29, 9, 51, -22, -108, 113, -86, 98, 80, 55, -114, -77, 57, 23, -95, 4, 51, -6, -26, -91, -42, 108, -76, 70, -114, 72, 61, -38, 13, 93, -91, 82, -83, -68, -51, 78, 119, -48, -106, -33, 47, 40, -75, 79, 15, 53, -61, 46, -66, -9, -66, 59, 43, 71, 105, -51, -58, 100, 121, 16, -9, -53, 95, -80, 60, -12, -71, -27, -37, 23, -35, 2, 78, -39, 32, -74, -25, -66, -34, -90, 57, -10, -80, -89, 108, 29, 92, 95, 65, 57, 100, 91, 18, -19, -90, 106, 55, -54, -67, -20, -51, 54, -51, -21, -85, 118, 122, 78, 21, 37, 44, -14, -25, -8, 1, -98, 116, -113, 44, 49, 100, 7, 64, 27, -23, 116, -32, -24, 110, 0, -58, -68, -38, -61, -115, -63, 95, 103, -42, 21, 125, 93, 22, 28, -74, -71, 61, 121, -61, 44, -89, 64, -54, 52, -28, 96, -92, -37, -71, -97, 34, 62, -82, 34, 6, 44, -4, -12, -40, -103, -103, 81, 114, -60, 17, 87, 5, 33, 23, -23, -97, 2, 89, -84, 105, -69, 80, -52, -39, 29, 2, 124, 8, 21, -9, -31, -38, 96, 115, 1, 0, 70, 29, 67, 37, -2, 108, -100, -109, 61, 105, 94, -63, 108, -85, 116, -96, -7, -61, -90, -65, 43, -44, -5, -52, 73, 110, -13, -96, -89, 49, -86, -96, 84, -87, -58, -23, 123, -48, 119, -64, -38, -3, -106, 121, -75, 42, 25, 95, 21, -32, -63, 112, 1, 21, -107, 78, 75, -13, -97, -71, 75, 93, 34, 27, -46, 94, -95, 106, -85, -25, -50, 26, -21, -121, -106, -19, -10, -87, -52, 6, -3, -115, 64, 66, 70, 13, 109, -10, 28, -18, 29, -90, 67, -21, -82, 8, 12, -54, 113, 62, -72, -36, -53, 76, 51, 57, 44, -13, 89, -19, 46, -111, -59, 112, 38, -64, 42, -90, 47, 17, 113, 110, 1, -82, -12, -93, -55, 22, 13, 109, 65, -44, -56, -32, -31, -12, -37, -12, 71, 112, 62, -49, -34, 103, -33, -47, 40, 46, 45, 65, -39, 12, 71, -14, 95, 117, 2, 120, 91, -18, -76, -85, 5, -91, -83, -34, 28, 73, -42, -6, -54, -44, -39, -109, 18, 102, -12, -6, 119, 7, 74, 20, 97, -92, -113, 50, -63, -3, 116, -69, 74, 105, -102, 8, -82, 123, 69, 12, 105, 49, -1, -96, 45, 98, -101, -68, -59, -1, 119, -119, -3, 75, 59, -29, 117, -106, -91, 123, 55, -49, -84, -69, -110, 54, 72, -66, 47, 55, -68, 83, -78, 116, 3, -95, 1, 97, -17, -65, 39, -25, 38, -117, -60, -99, 64, -62, 65, -54, 44, 25, -45, -7, -54, -102, 105, -45, -88, 79, 98, -93, -95, -5, -76, 120, 52, 100, -61, -100, 80, 97, -70, -121, -71, -113, -75, -110, 108, -51, -73, 72, 3, 13, 72, 10, 113, 16, -20, 26, -49, -38, -61, 101, 118, -78, 34, -58, -69, 84, 91, 24, -38, -120, -42, -9, 62, -95, 
  -6, 24, 10, 59, -105, -7, -10, -46, 60, -22, 4, -40, -59, -5, 8, -52, 32, 106, 98, -97, 75, -77, -8, 100, 92, -89, -43, -77, 106, 68, -95, 37, -5, -90, -18, 102, -13, 89, -7, 88, -85, -53, 63, 70, 34, -94, 81, -14, -38, 86, -32, 120, -72, 116, 86, -115, -96, -48, 66, 33, -69, -42, 112, -79, 109, 99, 111, -67, 86, 51, 14, -53, -63, 24, 48, 0, 80, 78, 50, -76, -3, -97, -47, 33, -119, 59, -33, -45, 36, 9, -103, 33, 67, -89, -64, -23, 9, -84, -60, -83, 22, 15, 22, -67, -17, -36, -103, -71, -95, 117, -87, 4, 34, -103, -76, 22, 99, -22, -77, 119, 41, -28, -65, -104, 43, -7, 36, -20, 1, -102, 85, 79, 105, -120, -93, 120, -64, 73, 95, 35, 39, 119, -101, 64, -49, 38, -40, 19, 4, -34, 59, -70, 4, 39, -96, -38, -96, 121, 18, 111, 76, 13, -10, 37, -99, -114, 96, 5, -31, -91, -108, 112, 9, -84, 4, 120, 89, -61, 5, 21, -109, -92, -72, 116, 14, -58, 80, 0, -67, 60, -66, -64, -69, 47, 56, -68, -36, -39, -29, -7, -116, 8, -99, -82, 40, 60, -120, -19, 98, 75, -93, -13, -97, 74, 40, 35, -74, -86, -56, -68, -7, -121, 111, 110, 97, 52, 27, -45, -115, 9, 10, 44, -81, -48, 65, 73, -28, 81, -41, 16, -8, 63, -16, 87, -81, -21, -109, -120, -16, 11, -101, -71, 9, -18, -34, -58, -36, 104, 71, 75, -115, -7, -92, -73, 2, -68, -46, 63, 96, 41, -109, 122, 36, 16, -9, -86, -60, -82, 111, 0, 77, -74, 98, -16, -70, 34, 50, -32, 0, 6, 61, -78, 57, -9, 87, 55, 18, 12, -68, 23, -101, 28, 117, -56, 51, -24, -4, 111, -54, -95, 56, 28, -88, 31, -71, 7, 119, 17, -101, 75, -49, -119, -2, -4, -86, -61, -23, -40, 10, 70, -17, 85, 64, 117, -56, -9, 110, -66, 48, -77, -15, 22, -26, -99, 19, -74, 37, -104, -121, 59, 36, 36, -31, -31, 106, -122, 27, 94, -2, -38, -74, 59, 22, 92, -119, -107, 15, -109, -103, 21, 63, 89, 4, -72, 52, -123, 65, -70, 88, -109, -51, -84, -84, 73, 76, 79, -90, -59, 64, 32, 49, -46, -1, 117, 27, -84, -27, 12, 20, 58, 58, 18, -99, -16, -25, -114, 19, 120, -18, 73, -32, -76, 4, -45, -18, -12, -58, 104, -120, 31, -88, -9, 101, 92, 95, -86, 66, 46, -55, 48, 103, -111, -14, -41, -70, -33, 83, 64, 35, -98, 23, 8, 110, -31, -105, 12, 84, 118, 79, 22, 17, -50, 76, -3, -19, -20, 40, -61, -10, -7, -30, -66, -96, 106, 91, -86, -74, -48, -74, 75, 97, 47, 25, -25, -11, -10, 32, 6, -22, -113, 26, -93, 16, 3, -122, 33, -73, -9, -70, -83, 33, 117, -14, -48, 69, 103, 13, -78, -93, -42, 106, 100, -58, 65, -15, 112, -51, 85, -2, 115, 110, -22, -101, -24, 111, -77, 60, 7, 11, 99, 9, 106, 113, -47, -73, 67, 106, -8, -35, 103, -24, 50, -106, 54, 120, 41, -75, 48, -17, -90, -18, -3, -99, 15, -87, -91, 42, 68, 119, 93, 29, -106, -54, 74, -97, -94, 10, 87, -36, 113, 67, -77, 94, 114, 96, -73, -40, -107, -109, -29, 100, -104, 80, -121, 54, -121, -21, 21, 5, -90, 4, 76, -118, -91, 75, -59, 81, 42, -47, 79, -55, 93, -45, -36, 22, -100, 24, 59, -57, -47, 
  -93, -96, -111, -86, 118, -36, 43, 1, 21, 86, 14, 108, 27, 106, -10, -84, -72, 78, -33, -8, -61, 11, 81, -105, -48, 43, -83, 72, 47, -96, 120, -17, -108, 2, 110, 49, -39, 19, -73, -7, -44, 10, 102, 109, 44, 82, 28, 78, -45, -108, 114, -53, -93, 7, 78, -73, 21, 104, -112, 116, -63, 27, 75, -102, -84, -56, 103, -27, -114, -58, -46, -14, -64, -57, 41, -53, -93, -99, 67, 82, 89, 113, -61, -95, -81, 69, 69, -64, 57, 84, 85, -18, 42, -3, 29, -64, 104, -6, 102, 101, -70, -32, 6, 76, -113, 43, 125, 121, 114, 66, -3, 55, -78, 45, -94, -44, -82, 77, 86, -112, 55, -14, 106, 41, 52, 66, -43, -39, -41, -112, -49, -58, -37, -86, 62, 86, -12, 23, 49, -44, 63, -57, -30, -93, -19, 17, -20, 103, -89, 69, 57, -50, -79, -50, -43, 63, -79, -75, -94, 76, 66, -57, -1, 62, 87, 63, -54, -56, 31, -21, 75, -98, -59, 29, 65, 75, 61, 6, 64, -43, 44, -18, -64, -42, -48, -37, 57, -94, 79, -85, 118, 76, -107, 73, 108, 40, 30, 77, -1, 115, 16, 49, 107, -21, -26, -54, 99, 40, 70, 83, 93, -33, 31, -79, -100, -14, -7, 99, -52, 46, 8, -21, -14, 29, -49, 32, 108, -15, -42, -77, 50, 37, 3, -20, -59, -47, 91, 75, -82, 107, -3, -32, -49, 60, 104, 34, 18, 110, 59, -36, -44, -7, -74, 100, -107, -33, 92, -43, 21, 78, -14, 0, 60, -10, 40, 15, 69, 37, -23, 42, -55, -42, -79, 119, -23, 97, 102, 28, 3, 71, -3, 57, 31, 100, 69, 36, -71, 81, 41, -110, 97, -15, 20, -29, 72, 58, -75, 66, 69, 2, 32, -63, -65, -52, -104, -18, 61, -8, 20, 110, 20, 32, -106, 85, -102, -64, 86, -22, -8, 33, -102, 11, -87, -9, 49, -35, -77, 23, 61, -91, -83, -55, -114, -3, -98, -105, 120, 13, -97, -94, -9, 22, -19, -40, 118, 49, -65, -78, -6, 124, -17, 121, 112, 65, -81, -22, 0, 124, 58, 122, 106, -23, 120, -48, -14, 42, 74, 88, -46, 86, 89, -91, 85, 110, 13, 95, -23, 82, -107, -58, -53, 123, 123, -37, -41, 27, -59, 123, 84, -111, -33, 55, -85, 5, 28, -69, -46, -113, -105, -102, 61, -88, 61, 109, -45, 120, -108, 50, 76, 42, -44, -10, -56, -57, -13, -2, -4, -9, 107, -21, -18, -26, 24, -14, -4, 104, -84, -92, 2, -14, -78, 111, 127, 115, -40, -109, 68, -115, 43, 104, -57, 7, 117, 32, -88, -70, -66, -105, 83, 24, -88, -60, 57, 38, -104, 73, 31, 73, -94, -17, -1, -93, 107, 14, 30, 96, 68, -10, 28, 1, -34, 43, 68, -88, -71, 39, 40, -69, 74, -13, 27, -107, 30, -5, -78, -16, 48, 74, -32, -46, -26, -74, -34, 47, -74, 81, 8, -114, 18, -53, -98, 122, 21, 72, 123, 47, -14, 27, 8, -111, 68, 53, 121, 25, 125, -63, 110, -29, 25, -104, 109, -47, 21, 118, -26, -106, -97, 0, -87, -103, 73, 18, 9, -100, -86, 80, -97, -75, 94, 28, 121, 6, -102, -10, 51, 23, -37, -90, 86, 58, -91, 19, 24, 105, 74, -59, 43, 53, -68, -38, 64, -74, -11, -110, 63, 7, 22, -16, 109, -31, -89, -39, 119, 93, -32, 78, -90, 69, -17, 114, 6, -95, 70, 49, -64, -107, -39, 66, -111, 6, 56, -108, 24, -113, -82, 53, 29, -77, 93, -114, 
  96, 71, -10, -26, 17, 114, 27, 89, 89, 109, -22, 95, 11, -77, -77, 49, 21, 66, 89, 93, 56, -51, 0, 24, 80, -80, -30, 92, -72, 69, -110, 52, -84, -49, 92, -99, 93, 64, 93, -56, -46, -40, -124, -104, -108, -18, -116, -5, -10, 23, -34, -17, 103, 116, 112, -57, 91, 43, -109, 48, -35, -12, 71, 9, 15, 71, 84, -67, 39, 53, -78, -64, -2, 122, -45, 26, -74, 40, -71, -20, -98, -46, 55, 97, 25, -32, 82, 113, -47, -99, -11, 97, 32, -84, -101, -100, -12, 69, -31, -98, -107, -40, 80, -88, 44, 65, -68, 17, 73, -18, 2, -15, -96, -76, 44, -4, -61, 117, -86, -80, 70, 105, 65, 85, 109, 27, -3, -115, -82, 84, 127, 88, 64, 39, 30, 99, -19, 87, 59, -42, 86, -124, 98, 8, -36, 102, -28, 41, 33, -102, 40, -116, -98, 81, 21, -7, 33, 69, 23, 76, -90, -53, 93, 120, 100, -25, -64, -99, 79, -60, -27, 33, 23, -67, 66, -96, -124, 30, -75, 74, 23, -86, -103, -111, 74, -95, 8, -88, -40, -22, 18, 95, 101, 94, -116, -66, 8, 33, 94, -35, -67, -118, -40, 53, -47, 32, 48, -48, 113, 33, -123, 43, -117, -3, 57, -45, -47, -115, 14, -14, 65, -126, -90, 31, 81, -26, -117, 46, -63, -67, 81, -121, 46, 107, 26, 5, -69, 79, 95, -1, 42, -50, -113, 60, -40, 13, 81, 92, -50, 88, -42, -3, 116, -37, -123, 64, -100, -10, 52, -61, -105, -40, -59, -17, 72, 9, 93, -69, 106, -45, 33, -110, 62, 105, 53, 104, 77, 105, -30, 5, -101, -41, -77, 18, -40, 100, 2, -63, 94, 4, 30, 34, -26, 11, 21, 2, 85, -115, -102, -78, 33, -63, -18, 27, -60, 44, -113, -62, 5, -12, 50, -112, 68, 29, -83, 22, 3, -73, 5, -71, -90, -67, -82, 44, -100, -109, 91, -29, -33, -41, -83, -64, 105, 38, 90, 107, -20, -46, -107, 74, 85, 79, -45, 10, 82, 14, 126, -105, 45, -70, 84, -12, 85, 108, -72, -114, 106, 73, 117, 27, -52, -25, -52, -120, 75, -22, 29, -70, 82, -63, 87, -55, -15, -96, 66, 49, 7, 33, -90, -102, -124, -16, -109, 6, 113, -114, 99, -24, 97, 115, -17, 39, 52, 25, 83, -22, -119, 65, -24, 64, 113, 19, -88, 106, -40, 35, 51, 101, -41, -42, 34, 90, 77, 78, -120, -4, -92, -12, 22, 83, -61, -17, 38, 83, 125, -30, -46, 119, -104, -14, -109, -73, -9, 43, 74, -107, 15, -63, -52, -116, 117, -19, -26, -73, -110, 112, -96, 1, 65, 108, 35, 125, 65, -112, -75, -101, -114, 9, 18, 0, -108, -85, -72, -86, -90, -90, 55, -71, 109, 76, -14, -111, -33, 107, 17, -109, -81, -47, -30, -44, 7, 104, -66, -85, 94, -39, -19, -76, -3, -61, 75, -28, 34, -100, 17, -112, 126, -91, 37, 105, -113, -93, -37, 56, 80, -24, -31, -91, -6, -44, -44, 47, 107, -113, 68, -17, 85, -115, -77, -71, 70, 54, -64, 26, 68, -17, -98, 45, -107, -117, 84, -125, -94, 64, 30, 125, 94, 15, 114, 20, -15, -94, 8, -53, -3, -109, -49, 49, -47, 20, -9, -35, 51, 47, 59, 3, 90, -54, 88, 93, 59, -123, 11, 94, 26, 100, -12, -41, -49, -97, -86, 24, -3, -107, 91, 51, -35, 80, -64, -86, 72, -95, -78, 41, 5, -86, -10, -120, 96, 80, 20, 50, 22, -112, 69, 21, -53, -60, -92, 8, 
  42, 79, 17, -73, 90, -43, 28, -56, -21, 108, -12, -63, -91, 97, 102, -121, 58, -11, -120, -29, -117, -28, 105, -24, -105, -17, -93, 33, 91, -55, 76, -44, -43, 97, -108, -71, -68, -17, -95, 107, -32, 22, 17, 89, -15, -55, 68, -55, -23, 46, -41, -47, -42, -97, 92, 78, 80, -2, 67, 45, -95, -74, 37, -20, -34, 71, 103, 99, 99, -102, -119, -102, 28, -15, -105, 79, -1, 32, -67, 45, 6, -15, 102, -20, -76, 72, -82, -30, -21, -40, 92, 56, -96, 22, 7, 98, -124, 64, -104, -101, 79, 114, -32, -77, -44, 86, 29, -22, 51, -15, -76, 66, 17, -63, -17, 103, 26, 39, 84, -122, -49, -10, -24, -82, -37, 79, 59, -97, -79, -16, -21, -99, -42, 24, 98, -92, 75, 77, 59, -29, 24, -123, 119, 66, 51, -13, -110, 106, 100, 102, 100, -56, -10, 45, 55, -35, 89, 107, -39, 82, 57, 65, 93, 31, -79, -6, 108, 66, 33, 61, -59, -70, 83, -90, 0, 45, -123, 93, 85, -95, -24, -124, 15, 2, -38, 38, 66, 48, 94, -63, -88, -11, 102, 47, 89, 41, -16, 107, -68, -20, 78, 117, 66, -10, -89, -124, 49, -96, -101, 89, 40, 97, 80, -66, 95, -25, 57, -125, 91, 12, -39, 18, -115, -99, 100, 45, -117, 58, -69, 23, -37, 106, 86, -86, -85, 2, -117, -7, 2, 15, -116, 107, -105, -71, -12, -57, 80, -26, 18, 27, 10, -120, 4, 15, -61, 93, -83, 95, -97, 32, 90, -99, 26, 97, 54, 85, -16, 32, -108, -56, 73, -68, 74, -45, 20, -74, 78, 13, -67, 65, 29, -33, 67, 94, -13, 77, -58, -101, 47, -17, 50, 22, -105, -8, 113, -96, 40, -111, -57, -125, -38, -94, -91, -25, -40, 98, -29, 116, -12, -111, 38, -44, 116, -97, -101, -30, 58, 12, -114, -20, -107, -106, 30, -118, -104, -7, 110, -57, 26, -79, -10, -2, -26, -17, 115, 15, -110, 54, -67, -82, 103, -112, 61, 90, 72, 30, -26, -19, -58, 12, 100, -64, -117, 25, -38, -123, -115, 36, -122, -23, -104, -55, 62, -96, -81, -54, -63, -33, -13, -95, 79, -61, -98, -35, 49, -4, 36, -12, -53, 75, 43, -103, 13, 72, 19, -51, 98, 36, 83, 40, -22, -34, 23, -120, 99, 79, 37, -8, 3, 24, -19, 84, 15, -95, 84, -38, -112, -62, 22, 29, 99, -57, -32, -45, -42, -55, 67, 7, -56, 31, -99, 35, 53, 68, -35, -106, -104, 96, 92, 106, -59, 40, 81, 98, 43, 57, 56, 41, 118, -43, 93, 79, 94, 78, 72, -40, -87, -117, 61, 86, -12, -38, -41, 29, 103, 75, 77, -51, 22, 3, 37, 64, 98, -54, 70, 84, -48, -25, -57, -96, 113, 36, -64, -55, -18, 13, -35, 7, 109, 2, 8, 63, -28, 8, -80, 51, 106, 66, 17, 28, 76, 73, 27, 12, 100, -27, -36, 89, -81, -97, 113, 64, 28, 114, -48, 92, 9, -83, -17, -57, -69, -72, 71, 14, -124, -87, -78, -77, 60, 46, 22, -98, 43, 17, -126, 48, -114, -27, 50, 42, 115, -18, -93, 25, -93, 118, -82, -15, 68, -95, -108, -56, 37, -35, 98, 77, -4, 24, -47, 39, 12, 56, -36, -114, 84, 40, -74, -14, -17, -71, -79, -97, -39, 58, 28, -120, 17, -65, 58, -88, -18, 83, -77, -122, -3, 84, -97, -23, -4, 3, -10, -118, -51, -74, 19, -50, 81, -120, 74, 53, 35, 22, -64, -12, -82, 30, -66, 109, -82, 9, 
  11, 27, -37, 79, 13, -32, 57, -26, 35, 88, 115, 103, 56, -52, 3, 24, -74, -66, 31, 96, -120, -47, 48, -50, -121, 94, 64, 19, 103, -56, -122, 120, 33, 56, 82, 56, 106, -73, 66, -114, -40, -10, 78, -37, -72, 8, -69, -11, -4, 111, -80, -76, -15, -29, 76, 68, 21, 111, -112, -54, -5, 2, 115, -20, -2, 76, 39, 76, -124, 103, 93, -99, -2, 41, 108, -92, 43, 27, -42, 120, 29, -66, 64, -21, 70, 61, 75, -70, -86, 116, -28, 72, -81, -24, 55, -14, 71, 72, 84, 77, -93, -7, -40, -122, -1, -72, 59, -16, -115, 114, 103, -100, 77, 9, 37, -76, -65, -122, -88, -74, -87, 14, -71, 7, -103, 34, -35, 4, 57, -52, -68, -5, 99, 73, -38, -63, -58, 7, -8, -77, 108, -101, -37, -88, 36, 0, -101, 64, 110, -28, 22, -39, -100, -111, -52, 6, 51, 72, 54, -22, 37, -59, -98, 61, -109, 63, -92, -93, 10, 39, 74, 12, 24, -119, 118, 79, 119, -51, 23, -79, 63, -27, 71, -64, 7, 65, 116, 98, 54, 17, -116, -58, 97, -108, -25, -94, -22, -117, 88, -124, -4, -15, 111, -60, 106, 108, -89, 111, 115, -124, 49, -39, 64, -39, -39, 60, -27, -82, -121, 40, 23, -127, 46, -64, 44, -33, 104, 3, -91, -37, -91, -1, 2, 41, 107, 77, 114, -117, 34, -63, -4, -104, 102, 79, 120, -8, 9, -123, 117, -65, 61, 31, 5, -12, -9, 104, 23, 4, 65, -33, -17, 48, 100, -17, -20, 56, -108, -29, -105, 58, -105, -78, -10, 87, 106, -16, 29, 52, 87, -71, 101, -66, -53, -79, 6, 90, -116, -105, -68, 72, -31, 15, 55, 1, 85, -34, 8, -29, 77, -82, -47, 44, 30, -116, -28, -99, -108, -88, -76, 21, 11, -108, 57, 79, 32, 113, -56, 26, -55, 60, 66, 4, 73, -78, -47, 4, -31, -22, 77, -88, -124, 101, 93, 24, 50, -33, 119, -23, 89, 50, 5, -65, 115, -25, -90, -78, -124, -19, 73, -45, -30, 65, -116, 100, 34, 38, 107, -77, -105, 47, 109, -120, -55, 77, -21, 43, 72, 78, -18, 95, -2, -119, -18, 117, 16, -60, 23, -83, -37, 117, 95, 33, -100, 34, -110, 120, 95, 34, -98, 25, 60, -124, 18, -7, -107, -86, -22, 84, -36, 72, -57, -59, 105, -32, -1, -104, 28, -80, -17, 92, 78, 23, 19, -62, 20, 42, 82, 50, 17, -19, -111, 14, 47, -71, 101, -97, -57, -37, -57, -11, 24, -123, 78, 117, 64, -34, -76, 96, 93, -23, -118, 68, -45, 50, 41, -6, 102, -62, 110, -53, 83, 64, 80, -33, -53, 114, 47, -35, 114, 66, -48, 6, -3, 26, 71, -90, 53, -80, -10, 92, -72, -16, 67, 29, -66, -18, 102, -84, -18, 94, -43, -71, -16, -32, 64, 106, 12, 28, 95, 100, 20, -97, -9, -24, -117, 39, 46, 10, 11, 81, -49, 67, 46, 50, 21, -1, -8, -100, -82, 23, 87, -55, 41, -13, 33, 19, 119, 32, 48, 59, 65, 26, -42, -79, -105, 66, -39, -19, 116, -30, -115, 74, -94, -19, -120, 63, 45, -30, -56, -59, -25, -88, 118, 10, 50, -105, 30, 49, -76, -17, -87, -84, -71, 9, -77, -69, 72, 79, 76, 81, 115, -109, -98, -72, 23, -63, 91, -74, 7, -92, 13, -4, 85, 6, 91, 92, -37, -122, -75, 113, -60, -48, -103, -103, 109, 35, -19, 4, -33, 48, -78, 49, 90, 119, -8, 69, 119, 108, -52, -4, 
  -68, -116, 123, -54, 62, -38, 66, 79, 15, -41, -98, -17, -95, -28, 15, -15, -61, -52, -48, -66, 30, 54, -65, 47, 73, 9, -86, -13, -46, 11, 22, 1, 90, 83, 102, -114, 34, 15, -85, -37, 4, -93, 87, -104, -42, 2, 80, -115, 88, 15, -89, 10, 74, 61, -17, -52, -43, 16, 91, 96, -115, 79, -26, -28, -110, 10, 74, 109, -87, -106, 90, -18, 99, 8, -35, 37, 100, -11, -29, -2, 59, -109, -47, 58, -43, 77, -25, 67, -90, -66, 38, 126, 80, -90, 73, -8, -113, -26, 2, -60, -62, -58, -118, -34, -78, -83, -54, -88, 100, 102, -117, 62, 33, 28, -36, -53, 60, 19, -45, -102, -33, -34, -34, 45, 1, -101, -116, -109, -68, 88, -86, -37, -17, 18, 55, 55, -62, 41, 85, -45, 67, 16, -28, 46, 28, 12, -30, 6, 86, 26, 120, -108, -114, 42, 6, -55, -93, 34, -100, 65, 108, -60, -40, 122, 115, -95, -105, 59, 46, 58, -77, 125, -45, 37, 18, -115, -102, 62, -15, 34, 118, 13, 24, 28, 18, -64, 67, -78, -82, 19, -86, -98, -33, 20, 75, -57, 24, 25, 71, -105, 50, 50, 50, 32, 113, -91, -98, 107, -93, 37, 92, 92, -75, -55, 25, -96, 58, -51, 48, 47, -28, 45, 100, 87, -36, -92, 67, 0, -87, -111, -54, -30, 99, 15, 119, -5, 107, -90, -74, 99, 125, 1, -24, 7, -9, -47, -30, -87, 110, -83, -57, -107, -30, -53, 75, -6, 59, -47, 96, 79, -121, -78, 116, -44, -86, 39, -96, -101, 12, 44, 87, -66, -1, 107, -13, -86, -18, 119, 114, -34, -75, 113, 49, -44, 59, 70, 81, 77, -61, -8, -91, -45, -77, -5, -94, -44, 81, -108, -97, 28, 2, -115, -73, -58, -117, 4, 95, 89, 4, -11, -66, 107, -105, 64, 82, 61, -57, 54, 46, 78, 110, 103, -112, -24, 22, -69, -43, 4, 125, -6, 34, 111, -107, -53, 62, -95, 50, 20, 106, 123, 103, -47, 7, 127, -13, 43, -53, 115, -96, 35, 96, 67, 93, -9, -44, 0, 47, 47, -99, 113, -98, 110, 122, 121, 90, 74, 77, -36, -120, 19, -106, -25, 58, -91, 10, 98, 96, -5, 28, 100, -17, -45, -113, 18, -95, -88, 48, -71, 125, -62, -100, 3, 91, 53, 53, 74, -79, 92, -117, -61, 27, -38, -1, -62, -94, 93, 59, 59, -75, 104, 120, 66, 104, -73, -110, 72, 92, 116, -30, 38, -48, 33, -81, 42, 13, -113, 25, 0, -7, 113, 0, 122, -76, -94, 76, 124, -40, -81, 47, -26, 25, 77, -32, 71, -104, -40, 13, 65, -104, 29, 95, -106, 60, -81, -10, -36, -43, -32, 61, 85, 9, 119, 36, -9, 101, 89, 87, 72, 42, -33, -37, 33, -4, 90, -25, 20, -49, 111, -17, -106, 54, 113, 55, 55, -94, -2, 78, -76, 48, 72, 47, -66, -73, 27, 14, -64, -105, -4, 64, 64, -4, -9, 60, -35, -45, 15, 57, -90, -90, -64, 8, 42, 4, -73, -43, 36, -75, 104, -54, 122, 5, 118, 123, 30, 53, 47, -59, 23, -19, -102, 6, 102, -98, -105, 45, 78, -11, 10, 43, 48, -62, -27, 1, 126, -105, -118, -45, 81, -35, -19, 72, -6, -116, 85, -7, 84, -55, 15, 20, 120, 109, -72, 80, -68, -43, 51, -30, 63, 74, -34, 103, 116, -99, 106, 60, 45, 8, -11, -69, -109, -62, 102, 6, 57, 46, 72, 28, 115, 42, 45, 32, -58, 6, 98, -25, 58, -52, 6, 62, -116, 
  -70, 120, -32, 46, -25, 110, -68, -56, -12, 102, -67, 61, -44, -30, 124, -87, -5, 88, 80, 88, 33, -49, 34, -92, -50, -31, 78, 49, 15, 16, -107, -94, -101, 76, 82, -34, -27, 80, -1, 95, 107, -65, 101, -10, -43, 75, -108, 119, -39, 85, -10, 72, 34, 46, 28, 71, -9, -44, -14, -94, 75, -59, -85, -40, -4, 63, -62, -104, -108, -30, 103, -16, 36, -57, -45, 96, -46, -46, -81, 123, 28, 121, 81, -58, -30, -107, -51, 66, 68, 118, -96, -4, 9, -41, 61, 3, -106, -46, -1, 6, -52, -103, 36, -49, 23, 114, -46, 15, 46, -8, 116, 73, -117, 94, 114, -50, -59, 125, 99, -76, 45, 122, 94, 115, 10, -5, 24, -13, -80, -63, -51, -7, -52, -1, -7, -27, 14, -16, 89, -55, -79, -22, -116, 33, -36, 37, -20, 20, 118, -98, -105, -24, 125, -63, -72, -116, 101, -30, 66, -48, -113, 46, -106, 71, 22, -113, 80, -112, -102, -34, 109, 83, 9, -111, -13, 61, 88, -6, 71, 60, 59, -33, 41, 103, 24, -111, 65, 2, -117, 86, 23, -62, 126, 67, 94, 93, -51, 80, 48, 103, -67, -16, 64, 48, 25, 52, -88, 25, -114, 3, -15, -110, -17, 27, 43, -73, 82, 126, 4, 112, 55, -62, -88, 51, -94, -38, 3, 98, 34, 4, 50, 8, 81, -85, 34, 46, 118, -22, 115, 55, 28, 12, 2, -32, 63, -108, -56, 45, 105, 103, -66, -112, -75, -116, 72, -44, -100, 98, -112, 113, 10, 25, 94, -73, 41, 79, -71, -112, 79, 81, -22, 68, -44, 46, 114, -65, 66, -89, 104, 30, -22, 110, 51, -104, 10, 109, -27, -91, 47, -77, -76, -26, -10, -23, -55, -118, 123, 3, 62, 19, 79, 11, 66, -39, 86, -43, -60, -31, 86, -25, 100, 96, -69, 80, 111, 15, 32, 32, 116, -25, -42, 96, -55, 27, 65, 81, -82, -3, -72, 110, -42, 26, 34, 117, -85, 23, -10, 42, -53, 43, 73, 12, -26, 20, 22, 47, -43, -49, -77, 95, -35, 91, -51, 107, -92, -42, -2, 101, 71, -96, 35, -86, -3, -90, 52, -98, -63, 116, 32, -92, 22, 15, -75, 36, -106, -38, 68, -72, 74, 45, -59, 98, -103, 31, 91, -103, 114, -19, 113, 12, 33, -109, 60, 35, -49, 19, 29, -85, -50, -56, -77, 76, -25, -26, 14, 78, 106, 1, 8, -19, -43, -117, -59, -86, -114, 113, -29, -85, -12, -48, 94, 91, -13, 21, 43, -43, -88, 53, -65, 121, -87, 107, -113, -70, -77, -55, -96, 38, 50, 41, -19, 42, 71, -52, -7, -86, 7, -109, -75, -74, 16, 39, -15, 64, -42, 49, -78, 28, 37, 46, -75, -42, 85, 31, -85, 69, -71, 91, -47, 75, 40, 17, -7, -20, -2, 70, -21, -83, 51, -80, -114, 5, 40, -32, 96, 32, 47, -117, 93, 87, -8, 103, -114, 91, -96, -43, -52, -91, 110, -100, -114, 12, -48, -21, 71, 7, 19, 107, -85, 2, 68, 89, -34, -9, -99, 37, 99, 84, 108, -76, 64, 127, 70, 127, -95, -8, 87, -117, 12, 73, 60, 20, -11, -109, 65, 78, 83, -30, 113, 76, -113, 114, -72, -10, -102, -2, 71, 5, -74, 101, -26, 96, -27, -76, -48, 56, 126, -47, 117, -18, -42, 88, 6, 108, -30, -14, -37, 29, -92, -89, 3, 38, -100, 114, 79, 31, -88, 16, -59, 10, 68, 99, -15, -72, -6, 53, 5, 25, -61, -64, -45, -34, 50, 24, 32, -1, 29, -70, -67, 59, 
  -89, 106, 73, 22, -3, 1, -12, -55, -13, 39, 7, -97, -67, -106, -77, 59, 86, 60, -100, -12, -56, -108, -53, 93, 77, 49, -24, 16, 123, 115, 10, -20, -9, 78, 32, 35, -10, -37, -94, 50, 34, 120, -68, -88, 54, 39, 64, 87, 117, 34, 108, 97, -18, 35, -29, 19, -99, -16, 10, -52, -51, -38, -28, 115, -26, -41, -16, 44, 5, 120, -44, -95, 81, -16, 28, -111, 100, 29, 66, 120, 59, 120, 50, -115, 42, 61, 4, -83, 50, -32, -117, 101, 99, 62, -66, -64, 97, 85, 123, 78, 125, 73, -109, -9, 44, 21, -108, 47, 48, 0, 84, -62, -64, -103, 38, -69, -107, 37, 25, 100, 38, -115, -31, 111, 58, -3, -46, 52, -74, -80, 112, 73, -49, 80, 120, -111, -98, -17, -36, 113, 31, 68, -85, -67, 112, -28, -35, 66, 15, 17, 54, 4, -65, -71, -120, -75, -24, -13, -3, 9, 78, 123, 100, -101, -20, -90, -17, 58, 32, -116, 39, 99, 22, -119, 59, -8, -1, 115, -25, -118, -69, -81, 56, 80, -28, 96, -67, -16, 41, 74, -79, -5, -63, 17, 57, 32, -22, -24, -86, 110, 100, 63, 40, -56, -22, 8, -18, 65, 93, 63, -39, -100, -105, -101, -91, 68, -98, 20, -79, 81, 117, 13, 15, -7, -91, 38, -22, 124, -65, -116, -51, -28, 98, -93, 21, 78, -52, 68, 72, -101, 46, -47, 109, -44, 87, 118, -61, -25, 60, -7, -101, 25, -37, -14, -27, -75, -111, -1, 11, -87, -47, 73, -18, 107, 49, -99, 47, -115, -70, 111, -71, 91, 4, -20, 8, -17, -59, 84, -16, 23, 110, -40, -30, -109, -45, 9, -26, -35, -18, 24, -88, 19, 67, -51, -118, -32, -48, 64, 62, -57, -73, 106, 65, -109, -90, -55, 78, -63, -32, 82, -104, -9, 11, 33, -76, -57, 50, -81, -102, 98, 50, 38, -5, -79, -45, 36, -4, 15, -51, -17, 64, 34, -23, 27, 115, -75, -55, -36, 94, -3, -91, 0, 47, -42, -28, 94, 6, 88, 73, 98, -44, -21, -91, 45, 86, 19, 31, 38, -52, -44, -3, -83, 101, -3, 56, -45, -63, -52, -57, 25, -70, -103, -83, 92, -96, -85, -14, 10, -106, 88, 23, 63, 117, -106, -21, -97, 39, -23, 37, -47, -58, -120, -100, -17, 67, -94, 43, -13, 107, 22, 49, 76, 2, 34, -26, -48, 97, -105, -5, 96, -46, 120, 99, -48, -23, 46, 29, -9, 69, 66, 80, 22, 13, 38, -88, 82, -61, 58, -113, -30, -9, 32, 81, 79, -24, 58, 84, -17, -95, 91, -1, -86, -2, 1, -94, 117, -85, 36, 104, -33, 0, -62, -54, -110, -1, 33, -8, 73, -53, -100, -113, 26, 2, 70, 18, 65, 61, 34, -61, 108, -20, 74, -44, -30, 35, -41, -9, -2, -42, -116, 110, -88, -42, 20, 22, -64, -64, -77, -116, -73, -71, 5, -2, -96, -50, -32, -38, -31, 121, -116, -63, 9, -40, -88, 90, 66, -64, 51, 30, 98, -32, 83, 18, 106, 115, 10, 107, 83, -121, 97, -85, -53, 8, 9, 49, -50, -4, 87, -66, 114, -27, -44, 39, 107, -90, -21, -42, 85, -80, -87, -120, -98, 37, 21, -72, -90, -16, 55, 8, 1, 83, 24, -33, 44, -4, -3, -53, 17, 66, -94, -11, -85, 81, -73, 107, -76, -18, -65, -87, 38, -62, -77, -81, 28, -70, 38, -6, -52, 31, -13, -26, -17, 105, 20, 9, -122, -106, -18, 79, 47, 110, -29, 97, 43, 76, -23, 98, 1, -49, 67, 
  -58, 3, -119, -108, 103, -55, 16, 83, -74, 6, 7, 48, 22, -40, -23, -39, 2, -23, -68, 93, -114, -38, 65, -102, 103, -18, -89, 114, 68, 59, 67, 18, 18, 24, -112, -116, 106, 17, -103, 18, -98, 73, -96, 90, 111, 106, 71, 101, 9, -91, -54, 76, -59, 105, 110, -84, -16, -40, 44, -103, 88, -34, 76, 89, 100, -40, -47, -55, -17, 21, 86, 78, -121, -111, 54, 87, -104, -45, 72, -116, 78, -123, -55, -123, 82, -10, 104, -109, -60, -89, 7, -95, -102, 92, 114, -69, 71, -93, 66, 64, 33, 117, 102, -68, 7, -31, -30, 54, -34, -60, 84, 98, 92, 18, 57, 57, 18, -65, 119, 43, -19, 52, 47, 118, -52, -75, -83, -47, -8, -71, -58, 39, 115, 112, 101, 71, -69, 58, 112, -33, 109, -117, 93, 13, 36, 63, 47, -17, -22, 50, 29, 81, 38, -55, -70, -109, -4, -7, -52, -21, 36, 7, 40, -113, 73, -60, -93, -83, -54, -49, 15, 97, -117, 81, 89, -62, 21, -96, -104, -95, -30, 1, 64, -56, -74, -16, 32, -62, 85, -78, -92, 3, -68, 94, -28, -90, -70, -1, -105, 67, -3, -24, 95, 103, -114, -88, 6, 117, -47, -1, -28, 58, 72, -9, -5, -118, -111, 15, -126, 88, 48, -47, -40, -27, 34, 82, -72, -21, 93, -64, -28, 38, 57, 42, -98, -2, 44, -74, 49, -34, -2, -81, 107, 45, -3, 10, -75, 20, -90, -105, 43, -86, -7, -50, 58, 18, 66, -121, -104, 119, -77, -63, -69, 76, 109, -122, 116, -78, -42, 70, 32, -92, -117, 63, -39, -122, -46, 101, 87, 88, 1, -27, 67, 3, -11, -5, -79, -57, -111, 20, 86, 90, -27, 113, -46, -111, -112, 42, -112, 67, 73, 50, -64, 14, 86, 85, -14, 89, -96, 97, -48, -81, -111, 112, -68, -62, -29, 92, 94, 23, 100, -14, -115, 77, -50, -52, 3, -31, 82, -64, -8, -70, -28, 57, 26, 30, -53, -26, -78, -106, -26, -118, 114, -83, 101, -14, 49, -20, -40, 56, 74, 35, 109, -49, -119, 50, 32, -1, 113, 91, -105, -67, -79, 98, -74, 109, 55, -16, -36, 97, -4, -77, -91, 94, -122, -54, -121, -30, 43, 13, -33, -22, 87, 107, 31, -60, 100, -109, 92, -21, 66, -45, 53, -89, 15, 114, -30, -102, 113, 79, -53, 3, 11, 118, -84, -115, -97, -120, -118, 45, 87, 2, 48, -92, 14, -120, 76, 88, 63, 12, -29, 119, -104, -6, -15, -77, 10, 73, -24, 24, 12, -31, 86, -36, 9, 27, 99, -17, 45, 75, 105, -12, 15, 33, 82, -34, 58, -83, -58, -9, 109, 119, 118, -98, 117, 99, 46, -121, 76, 98, 81, -118, 4, -30, -15, 101, 79, 76, -37, -86, -28, 29, 42, 109, 23, -117, -60, 112, -96, 27, -68, -50, -98, 70, 59, 34, -34, 116, 19, 47, -59, 65, -49, -76, -57, -37, -97, -9, 70, 112, 17, -87, 25, 108, 113, 75, 48, 16, -33, 95, 26, -86, 25, 46, 11, 56, 93, -2, -14, -89, 76, -97, 22, -119, -41, 56, -57, -85, -49, -123, 91, 13, 81, -21, 6, -12, -82, -124, -100, 44, -68, -80, 11, -18, 6, -53, 37, 114, -73, 104, 95, 75, 72, -63, 99, 10, -125, 48, 44, 54, 69, 112, -94, -107, -119, -52, 91, 57, -3, -21, -24, -19, 55, 97, 102, 68, 110, -120, 83, 11, -23, 44, 58, 73, 40, -93, 21, 93, 61, 7, 67, -4, -26, -61, 2, -40, -119, 92, 54, -81, 
  -77, -22, 102, 110, 77, 50, 1, -78, -29, -26, -99, -77, 94, -8, -49, 89, -44, -16, -96, -17, 80, -101, -33, 123, -73, -98, 95, -28, 27, -3, 72, 50, 103, 16, 56, 82, 56, -11, 31, 77, -38, -115, 39, -44, 119, 98, -88, 59, 68, 13, 15, -98, -83, -50, 50, -83, 21, 52, -111, 41, 17, -27, 123, -93, 93, 49, -87, 111, -83, 73, 43, -59, -3, -96, 112, -70, -66, -65, 71, -62, -88, 68, -50, -105, -114, -59, 8, 33, -55, 27, -60, 114, 29, -56, 27, 110, 21, 121, -18, 31, -75, -61, -33, 112, -65, 60, -62, -39, 45, 63, -25, 119, 108, 113, 35, 63, 103, 102, 59, 100, 40, -28, -80, -67, 125, -38, -110, -42, -89, -83, 112, -101, -42, -29, -83, 18, -62, -8, -75, 120, 67, -44, 98, 102, 125, -81, 36, 69, -108, 22, 40, -84, 22, -4, -79, 101, -96, 72, -84, 55, 110, 107, -106, 53, -46, -66, 34, 49, 3, 81, 77, -24, 87, 82, -65, -74, 106, -3, 76, 49, -65, -80, 58, -30, -96, -34, 103, 82, -53, -44, -21, -51, -98, -9, 49, -46, -69, 85, 74, 76, -20, -53, -113, 20, 69, -17, 23, 83, -59, 109, -65, 114, -65, 38, 36, -50, -62, -102, -61, -47, -79, 61, 2, -38, 48, -101, 14, 2, -46, -113, -25, 50, 85, -39, 118, 89, 115, 6, 116, -107, 125, 46, 95, -88, -4, 41, 35, -43, 104, 101, -40, 121, -96, 87, -64, -21, -45, 97, -65, -38, -102, 45, 52, 10, 36, 73, 9, 48, -48, 15, 67, -45, 1, -114, -56, -65, 39, 73, 101, 85, 68, -73, 35, 23, 118, -49, 93, -46, 88, -45, 72, -83, 42, -40, -19, -20, 61, 98, 94, 21, 24, -4, -76, -37, -38, -23, -117, 10, 46, 13, -47, -18, -47, -15, 18, -17, 93, -107, -98, -21, -87, -98, 74, 78, 68, -2, -80, 43, 22, -100, 62, -35, 49, 115, 78, -84, 51, -48, 64, -109, 123, 54, 59, -10, 90, 10, -8, 58, -7, 10, 49, -117, 85, 10, 71, 95, 85, -115, 107, -92, 67, -92, 43, 78, -10, -25, -38, -118, 118, -107, -49, 118, 24, 64, 49, 4, -41, 12, 8, -9, 38, -116, -36, 69, 81, 19, -47, 74, 48, 7, 64, -86, -114, -33, -109, -38, -39, -49, 56, -24, 65, 2, -41, 101, -72, -104, -79, -111, 122, -19, 123, 109, 104, -42, 23, 96, 28, 57, 18, 97, -51, 97, 44, 52, -6, 100, -35, -25, -50, 92, 16, 40, 113, -91, 1, 74, -64, -110, 50, 0, 34, 85, -103, -97, 57, 122, -73, -72, -13, 61, -76, 120, 15, 52, 108, 96, -56, 91, 27, 56, 4, 49, 65, -31, -107, -17, 12, 104, 0, -27, 88, -16, -48, 41, -79, 42, 7, 119, -101, 99, -63, -111, -98, -105, 106, -66, 50, -56, 31, -98, -98, 74, 124, 92, 39, 113, 38, 114, 15, -28, -29, -105, 44, 81, 87, -7, -19, 57, -19, 9, 38, -114, 113, 82, -97, 34, -47, -88, 99, -51, -2, 39, -18, 34, -108, -24, -30, 42, 89, 113, -104, -100, -89, 52, -9, 3, 102, -67, 56, -93, 112, 7, -27, 69, -15, 91, 40, 69, 35, 90, 81, 83, 87, -106, 123, 121, -99, 112, -61, 16, 20, 104, 99, 38, -84, 70, 84, -105, -17, -74, -107, -25, -44, -87, 61, 96, 80, -90, 37, 43, 55, 6, -6, -14, 19, 21, -53, 98, 72, 13, -111, -52, -19, -52, 88, 110, -23, -4, -70, -89, 
  -39, 52, 79, 53, 22, -8, -3, -107, 103, 106, -32, 88, -12, -39, 97, 35, 25, -117, 30, -20, -41, 64, 103, -110, 78, 110, -6, 108, -110, -124, -119, -89, 118, 59, 36, 12, 93, -60, 60, -31, -97, -54, 109, 43, -73, 14, -19, 83, -58, -125, 100, 81, -40, -40, -47, 1, 97, -111, 17, -47, 27, -90, 30, -94, -69, 94, 111, 81, 13, -76, 89, -73, 7, -50, -108, 75, 63, 27, -38, 97, -3, 101, -26, 19, -108, 119, -12, 95, -111, 66, -41, -3, 55, -109, 70, 95, 31, 120, 118, 104, -25, 27, 80, 63, 79, -72, 12, 6, 4, 71, -81, -114, 119, 114, 27, -123, -54, 107, 76, 54, -26, -8, 73, 72, 64, 110, -83, -29, 115, 96, -125, 101, -34, 70, 67, -49, -46, -15, -65, -17, -93, 10, 83, -98, 42, -80, -31, 116, -111, 80, 87, -85, -119, -69, -112, -121, -101, 79, 109, 118, -121, 3, 115, 14, -104, -104, -63, -97, 68, 21, -53, -11, 65, -92, 16, -71, -27, -78, -100, -126, 8, 94, -9, -124, -40, 5, -103, -19, -58, -55, -94, 28, -31, -84, -72, -44, 72, 5, -122, -21, 15, -4, -55, 79, 50, -103, -52, -12, -74, 15, -90, -114, 101, 61, 55, -98, -68, 41, 71, 81, -90, 27, -116, -29, 100, 25, -46, -90, -97, 110, -59, 56, -18, -7, 59, 83, 114, -44, -115, -32, 80, 90, 4, 87, 74, -126, 26, -34, -80, -42, 96, -72, -32, 56, 63, 109, 24, -16, -96, 80, 109, -30, 99, -1, -24, -53, -31, 12, 72, 14, 16, 21, -54, 107, 110, -8, -36, -109, 113, 15, -39, -64, -10, -7, -39, 30, -25, 106, 81, -100, 105, 92, -116, -5, 16, 48, -28, -119, 61, 22, 5, -7, -93, 0, -115, 104, -88, -113, -43, 107, -17, -64, -71, 43, 105, 94, 4, -35, 81, -41, 25, 118, 3, -93, -32, 8, 49, -49, 73, -29, -56, -121, -29, -30, 51, -82, -49, 106, 55, -66, 51, 15, -82, -16, -51, -17, -90, -24, 8, 93, 65, -83, -7, -6, 1, 2, -126, -93, 2, 102, 17, -111, -118, -1, 111, 71, 70, 23, -58, 0, 4, -112, -9, -35, -9, -123, -86, 32, -75, 58, 71, -1, -49, -14, -40, -61, 49, 58, -29, -27, -118, 94, -104, 26, -49, -92, 78, -56, 10, -22, 107, 110, -76, -41, -60, 23, -110, -2, 61, 90, -123, -99, -22, 30, -103, -111, -44, 48, -38, 1, 51, -78, 30, 69, 49, 114, -4, -64, -89, -22, 71, -75, -112, -79, 102, -116, 65, -101, 67, 27, 20, 57, -31, -4, 25, 35, 65, -77, 58, -33, -116, 118, -71, -109, 108, -26, 45, -62, 94, -101, -10, 35, 58, -3, -78, -82, -40, -10, -69, -41, 27, -77, 7, -114, -122, 109, 15, -122, 71, 10, 90, -85, 64, -103, 63, 15, -43, -120, -28, -4, -114, -32, 104, 75, -48, -112, 105, 50, 7, 82, 108, -114, 78, 89, 109, 94, -78, 85, 66, -34, -14, -118, -1, 104, -86, 33, -19, -77, 62, 58, 12, 111, -9, 61, 33, 69, 86, 16, 8, 6, -35, -57, -23, -2, -12, 56, 22, 41, 13, -126, -122, 93, 29, 68, 44, -28, 25, -113, 52, 28, 28, 52, -126, 99, -28, 54, 87, 26, 91, 36, -117, -59, -46, 109, 65, 51, 93, 18, -16, -27, 87, -60, -62, -107, 54, 72, 65, -59, 100, 100, 5, -62, 62, -84, 104, -85, 84, -86, -53, 50, -94, 46, 105, 80, -105, 8, 62, -75, 6, -70, 
};
const TfArray<2, int> tensor_dimension4 = { 2, { 20,600 } };
const TfArray<1, float> quant4_scale = { 1, { 0.00080336211249232292, } };
const TfArray<1, int> quant4_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 0 };
const ALIGN(8) int8_t tensor_data5[10*20] = { 
  -80, -4, 35, 21, 103, -76, -34, 22, -106, -114, -40, -69, 111, 100, -35, 0, -109, 17, -37, 15, 
  -81, 18, -61, 48, 30, 10, 86, -54, -44, -90, 19, -95, -29, -39, -96, -108, -51, 82, 61, -105, 
  -98, 85, 29, -63, 78, -3, 51, -55, 97, 93, -74, -57, 39, -118, 38, -41, -29, 121, -111, -37, 
  -81, -22, -75, -101, -17, 58, 80, 94, 110, -91, 96, 49, 3, -79, -28, 123, 27, 36, 33, -82, 
  20, 8, -68, -94, -122, 108, -43, -6, -73, 123, 7, -121, -107, 46, -18, 25, 24, -110, 122, 30, 
  74, 100, -100, 11, -85, -24, 4, -28, 117, -116, -127, 117, -95, 58, -64, 98, -107, -10, -108, 86, 
  98, -38, 15, 97, 76, -36, 14, 56, 52, 105, -61, 74, -125, -12, -10, -12, 48, -27, 45, -55, 
  -69, 111, -69, -119, -26, -21, -37, -101, 106, 82, 79, 113, -23, -7, -29, -49, -72, 19, -53, 54, 
  -85, 80, 8, 57, 115, -4, 69, -119, -27, -90, 51, 90, 109, 123, -21, 59, -98, 111, -2, 4, 
  -35, 39, 26, 95, -92, 72, 86, -70, 93, -44, -26, 36, -105, -42, -102, 26, 120, 115, -42, 115, 
};
const TfArray<2, int> tensor_dimension5 = { 2, { 10,20 } };
const TfArray<1, float> quant5_scale = { 1, { 0.0034641963429749012, } };
const TfArray<1, int> quant5_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const ALIGN(8) int8_t tensor_data6[3*10] = { 
  -38, -115, -113, 103, 56, -3, 48, 39, -93, -15, 
  74, -11, 105, -86, 60, 0, -4, 48, 86, 12, 
  -127, -12, 8, 69, 80, 30, -30, -11, 24, -59, 
};
const TfArray<2, int> tensor_dimension6 = { 2, { 3,10 } };
const TfArray<1, float> quant6_scale = { 1, { 0.0052788448520004749, } };
const TfArray<1, int> quant6_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const TfArray<2, int> tensor_dimension7 = { 2, { 1,20 } };
const TfArray<1, float> quant7_scale = { 1, { 0.1102457195520401, } };
const TfArray<1, int> quant7_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const TfArray<2, int> tensor_dimension8 = { 2, { 1,10 } };
const TfArray<1, float> quant8_scale = { 1, { 0.082901395857334137, } };
const TfArray<1, int> quant8_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const TfArray<2, int> tensor_dimension9 = { 2, { 1,3 } };
const TfArray<1, float> quant9_scale = { 1, { 0.062861144542694092, } };
const TfArray<1, int> quant9_zero = { 1, { -121 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const TfArray<2, int> tensor_dimension10 = { 2, { 1,3 } };
const TfArray<1, float> quant10_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant10_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const TfLiteFullyConnectedParams opdata0 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs0 = { 3, { 0,4,1 } };
const TfArray<1, int> outputs0 = { 1, { 7 } };
const TfLiteFullyConnectedParams opdata1 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs1 = { 3, { 7,5,2 } };
const TfArray<1, int> outputs1 = { 1, { 8 } };
const TfLiteFullyConnectedParams opdata2 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs2 = { 3, { 8,6,3 } };
const TfArray<1, int> outputs2 = { 1, { 9 } };
const TfLiteSoftmaxParams opdata3 = { 1 };
const TfArray<1, int> inputs3 = { 1, { 9 } };
const TfArray<1, int> outputs3 = { 1, { 10 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension0, 600, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant0))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data1, (TfLiteIntArray*)&tensor_dimension1, 80, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant1))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data2, (TfLiteIntArray*)&tensor_dimension2, 40, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant2))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 12, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant3))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 12000, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant4))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 200, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant5))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data6, (TfLiteIntArray*)&tensor_dimension6, 30, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant6))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 608, (TfLiteIntArray*)&tensor_dimension7, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant7))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension8, 10, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant8))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 16, (TfLiteIntArray*)&tensor_dimension9, 3, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant9))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension10, 3, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant10))}, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, const_cast<void*>(static_cast<const void*>(&opdata0)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_SOFTMAX, },
};
static std::vector<void*> overflow_buffers;
static TfLiteStatus AllocatePersistentBuffer(struct TfLiteContext* ctx,
                                                 size_t bytes, void** ptr) {
  if (current_location - bytes < tensor_boundary) {
    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    *ptr = malloc(bytes);
    if (*ptr == NULL) {
      printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return kTfLiteError;
    }
    overflow_buffers.push_back(*ptr);
    return kTfLiteOk;
  }

  current_location -= bytes;

  *ptr = current_location;
  return kTfLiteOk;
}
typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;
static std::vector<scratch_buffer_t> scratch_buffers;

static TfLiteStatus RequestScratchBufferInArena(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  scratch_buffer_t b;
  b.bytes = bytes;

  TfLiteStatus s = AllocatePersistentBuffer(ctx, b.bytes, &b.ptr);
  if (s != kTfLiteOk) {
    return s;
  }

  scratch_buffers.push_back(b);

  *buffer_idx = scratch_buffers.size() - 1;

  return kTfLiteOk;
}

static void* GetScratchBuffer(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > static_cast<int>(scratch_buffers.size()) - 1) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}
} // namespace

  TfLiteStatus trained_model_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;
  ctx.AllocatePersistentBuffer = &AllocatePersistentBuffer;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArena;
  ctx.GetScratchBuffer = &GetScratchBuffer;
  ctx.tensors = tflTensors;
  ctx.tensors_size = 11;
  for(size_t i = 0; i < 11; ++i) {
    tflTensors[i].type = tensorData[i].type;
    tflTensors[i].is_variable = 0;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    tflTensors[i].allocation_type = tensorData[i].allocation_type;
#else
    tflTensors[i].allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
    tflTensors[i].bytes = tensorData[i].bytes;
    tflTensors[i].dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    if(tflTensors[i].allocation_type == kTfLiteArenaRw){
      uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

     tflTensors[i].data.data =  start;
    }
    else{
       tflTensors[i].data.data = tensorData[i].data;
    }
#else
    tflTensors[i].data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
    tflTensors[i].quantization = tensorData[i].quantization;
    if (tflTensors[i].quantization.type == kTfLiteAffineQuantization) {
      TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
      tflTensors[i].params.scale = quant->scale->data[0];
      tflTensors[i].params.zero_point = quant->zero_point->data[0];
    }
    if (tflTensors[i].allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tflTensors[i].data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }
  if (tensor_boundary > current_location /* end of arena size */) {
    printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }
  registrations[OP_FULLY_CONNECTED] = *tflite::ops::micro::Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = *tflite::ops::micro::Register_SOFTMAX();

  for(size_t i = 0; i < 4; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
    tflNodes[i].custom_initial_data = nullptr;
    tflNodes[i].custom_initial_data_size = 0;
    if (registrations[nodeData[i].used_op_index].init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for(size_t i = 0; i < 4; ++i) {
    if (registrations[nodeData[i].used_op_index].prepare) {
      TfLiteStatus status = registrations[nodeData[i].used_op_index].prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  0, 
};
TfLiteTensor* trained_model_input(int index) {
  return &ctx.tensors[inTensorIndices[index]];
}

static const int outTensorIndices[] = {
  10, 
};
TfLiteTensor* trained_model_output(int index) {
  return &ctx.tensors[outTensorIndices[index]];
}

TfLiteStatus trained_model_invoke() {
  for(size_t i = 0; i < 4; ++i) {
    TfLiteStatus status = registrations[nodeData[i].used_op_index].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus trained_model_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif
  scratch_buffers.clear();
  for (size_t ix = 0; ix < overflow_buffers.size(); ix++) {
    free(overflow_buffers[ix]);
  }
  overflow_buffers.clear();
  return kTfLiteOk;
}
